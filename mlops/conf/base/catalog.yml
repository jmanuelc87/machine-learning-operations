raw_energy_efficiency:
  type: pandas.ExcelDataset
  filepath: data/01_raw/ENB2012_data.xlsx
  metadata:
    kedro-viz:
      layer: raw



"energy_efficiency":
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/ENB2012_data.parquet
  load_args:
    engine: pyarrow
  save_args:
    engine: pyarrow
  metadata:
    kedro-viz:
      layer: intermediate

"renamed_energy_efficiency":
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pandas.ParquetDataset
    filepath: data/02_intermediate/ENB2012_cols_renamed.parquet
    load_args:
      engine: pyarrow
    save_args:
      engine: pyarrow
    metadata:
      kedro-viz:
        layer: intermediate



features_energy_efficiency:
  type: pandas.ParquetDataset
  filepath: data/03_primary/ENB2012_features.parquet
  load_args:
    engine: pyarrow
  save_args:
    engine: pyarrow
  metadata:
    kedro-viz:
      layer: primary

target_heating_energy_efficiency:
  type: pandas.ParquetDataset
  filepath: data/03_primary/ENB2012_target_heating.parquet
  load_args:
    engine: pyarrow
  save_args:
    engine: pyarrow
  metadata:
    kedro-viz:
      layer: primary

target_cooling_energy_efficiency:
  type: pandas.ParquetDataset
  filepath: data/03_primary/ENB2012_target_cooling.parquet
  load_args:
    engine: pyarrow
  save_args:
    engine: pyarrow
  metadata:
    kedro-viz:
      layer: primary



"scaled_energy_efficiency":
  type: pandas.ParquetDataset
  filepath: data/04_feature/ENB2012_scaled.parquet
  load_args:
    engine: pyarrow
  save_args:
    engine: pyarrow
  metadata:
    kedro-viz:
      layer: feature

"encoded_energy_efficiency":
  type: pandas.ParquetDataset
  filepath: data/04_feature/ENB2012_encoded.parquet
  load_args:
    engine: pyarrow
  save_args:
    engine: pyarrow
  metadata:
    kedro-viz:
      layer: feature

"merged_energy_efficiency":
  type: pandas.ParquetDataset
  filepath: data/04_feature/ENB2012_merged.parquet
  load_args:
    engine: pyarrow
  save_args:
    engine: pyarrow
  metadata:
    kedro-viz:
      layer: feature



"{namespace}.energy_efficiency_train":
  type: pandas.ParquetDataset
  filepath: data/05_model_input/{namespace}_ENB2012_train.parquet
  load_args:
    engine: pyarrow
  save_args:
    engine: pyarrow
  metadata:
    kedro-viz:
      layer: model_input

"{namespace}.energy_efficiency_test":
  type: pandas.ParquetDataset
  filepath: data/05_model_input/{namespace}_ENB2012_test.parquet
  load_args:
    engine: pyarrow
  save_args:
    engine: pyarrow
  metadata:
    kedro-viz:
      layer: model_input

"{namespace}.target_energy_efficiency_train":
  type: pandas.ParquetDataset
  filepath: data/05_model_input/{namespace}_ENB2012_train_target.parquet
  load_args:
    engine: pyarrow
  save_args:
    engine: pyarrow
  metadata:
    kedro-viz:
      layer: model_input

"{namespace}.target_energy_efficiency_test":
  type: pandas.ParquetDataset
  filepath: data/05_model_input/{namespace}_ENB2012_test_target.parquet
  load_args:
    engine: pyarrow
  save_args:
    engine: pyarrow
  metadata:
    kedro-viz:
      layer: model_input


"scaler_artifact":
  type: kedro_mlflow.io.models.MlflowModelTrackingDataset
  flavor: mlflow.sklearn
  artifact_path: 'scaler'

"encoding_artifact":
  type: kedro_mlflow.io.models.MlflowModelTrackingDataset
  flavor: mlflow.sklearn
  artifact_path: 'encoder'


"{namespace}.selection_best_xg_r2_model":
  type: kedro_mlflow.io.models.MlflowModelTrackingDataset
  flavor: mlflow.xgboost
  artifact_path: "{namespace}/r2/model"

"{namespace}.selection_best_xg_r2_metric":
  type: kedro_mlflow.io.metrics.MlflowMetricDataset
  key: "{namespace}_r2"

"{namespace}.selection_best_xg_r2_params":
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pandas.CSVDataset
    filepath: data/07_model_output/{namespace}_xgb_params.csv
  artifact_path: "{namespace}/r2/params"



"{namespace}.selection_best_xg_mse_model":
  type: kedro_mlflow.io.models.MlflowModelTrackingDataset
  flavor: mlflow.xgboost
  artifact_path: "{namespace}/mse/model"

"{namespace}.selection_best_xg_mse_metric":
  type: kedro_mlflow.io.metrics.MlflowMetricDataset
  key: "{namespace}_mse"

"{namespace}.selection_best_xg_mse_params":
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pandas.CSVDataset
    filepath: data/07_model_output/{namespace}_xgb_params.csv
  artifact_path: "{namespace}/mse/params"



# Excel exportado en la funcion de descriptive_statistics
EDA.descriptive_statistics_excel:
  type: pandas.ExcelDataset
  filepath: data/08_reporting/EDA/estadistica_descriptiva.xlsx
  metadata:
    kedro-viz:
      layer: reporting

# Histogramas exportados
EDA.histograms:
  type: matplotlib.MatplotlibWriter
  filepath: data/08_reporting/EDA/histograms.png
  metadata:
    kedro-viz:
      layer: reporting
  save_args:
    format: png

# Boxplots
EDA.boxplots:
  type: matplotlib.MatplotlibWriter
  filepath: data/08_reporting/EDA/boxplots.png
  metadata:
    kedro-viz:
      layer: reporting
  save_args:
    format: png

# Heatmap
EDA.heatmap:
  type: matplotlib.MatplotlibWriter
  filepath: data/08_reporting/EDA/heatmap.png
  metadata:
    kedro-viz:
      layer: reporting
  save_args:
    format: png